"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TOKENS = exports.PATTERNS = exports.ENGRAM_BLOCK_TYPE = exports.TOKEN_TYPE = void 0;
var TOKEN_TYPE;
(function (TOKEN_TYPE) {
    TOKEN_TYPE[TOKEN_TYPE["NONE"] = 0] = "NONE";
    TOKEN_TYPE[TOKEN_TYPE["HEADING_1_MARKUP"] = 1] = "HEADING_1_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["HEADING_2_MARKUP"] = 2] = "HEADING_2_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["HEADING_3_MARKUP"] = 3] = "HEADING_3_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["UNORDERED_LIST_MARKUP"] = 4] = "UNORDERED_LIST_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["ORDERED_LIST_MARKUP"] = 5] = "ORDERED_LIST_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["HORIZONTAL_RULE_MARKUP"] = 6] = "HORIZONTAL_RULE_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["IMAGE_MARKUP_1"] = 7] = "IMAGE_MARKUP_1";
    TOKEN_TYPE[TOKEN_TYPE["IMAGE_MARKUP_2"] = 8] = "IMAGE_MARKUP_2";
    TOKEN_TYPE[TOKEN_TYPE["IMAGE_PATH"] = 9] = "IMAGE_PATH";
    TOKEN_TYPE[TOKEN_TYPE["LEFT_BOLD_TEXT_MARKUP"] = 10] = "LEFT_BOLD_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["RIGHT_BOLD_TEXT_MARKUP"] = 11] = "RIGHT_BOLD_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["LEFT_ITALIC_TEXT_MARKUP"] = 12] = "LEFT_ITALIC_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["RIGHT_ITALIC_TEXT_MARKUP"] = 13] = "RIGHT_ITALIC_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["LEFT_UNDERLINED_TEXT_MARKUP"] = 14] = "LEFT_UNDERLINED_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["RIGHT_UNDERLINED_TEXT_MARKUP"] = 15] = "RIGHT_UNDERLINED_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["LEFT_HIGHLIGHTED_TEXT_MARKUP"] = 16] = "LEFT_HIGHLIGHTED_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["RIGHT_HIGHLIGHTED_TEXT_MARKUP"] = 17] = "RIGHT_HIGHLIGHTED_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["LEFT_STRIKETHROUGH_TEXT_MARKUP"] = 18] = "LEFT_STRIKETHROUGH_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["RIGHT_STRIKETHROUGH_TEXT_MARKUP"] = 19] = "RIGHT_STRIKETHROUGH_TEXT_MARKUP";
    TOKEN_TYPE[TOKEN_TYPE["LINK_MARKUP_1"] = 20] = "LINK_MARKUP_1";
    TOKEN_TYPE[TOKEN_TYPE["LINK_MARKUP_2"] = 21] = "LINK_MARKUP_2";
    TOKEN_TYPE[TOKEN_TYPE["LINK_MARKUP_3"] = 22] = "LINK_MARKUP_3";
    TOKEN_TYPE[TOKEN_TYPE["LINK_URL"] = 23] = "LINK_URL";
    TOKEN_TYPE[TOKEN_TYPE["TEXT"] = 24] = "TEXT";
    TOKEN_TYPE[TOKEN_TYPE["NEW_BLOCK_TRIGGER"] = 25] = "NEW_BLOCK_TRIGGER";
    TOKEN_TYPE[TOKEN_TYPE["NEW_INDENTED_BLOCK_TRIGGER"] = 26] = "NEW_INDENTED_BLOCK_TRIGGER";
    TOKEN_TYPE[TOKEN_TYPE["BLANK_LINE"] = 27] = "BLANK_LINE";
})(TOKEN_TYPE || (TOKEN_TYPE = {}));
exports.TOKEN_TYPE = TOKEN_TYPE;
var ENGRAM_BLOCK_TYPE;
(function (ENGRAM_BLOCK_TYPE) {
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["NONE"] = 0] = "NONE";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["HEADING_1"] = 1] = "HEADING_1";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["HEADING_2"] = 2] = "HEADING_2";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["HEADING_3"] = 3] = "HEADING_3";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["UNORDERED_LIST"] = 4] = "UNORDERED_LIST";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["ORDERED_LIST"] = 5] = "ORDERED_LIST";
    ENGRAM_BLOCK_TYPE[ENGRAM_BLOCK_TYPE["HORIZONTAL_RULE"] = 6] = "HORIZONTAL_RULE";
})(ENGRAM_BLOCK_TYPE || (ENGRAM_BLOCK_TYPE = {}));
exports.ENGRAM_BLOCK_TYPE = ENGRAM_BLOCK_TYPE;
const ENGRAM_REGEX_PATTERNS = {
    NEW_BLOCK_TRIGGER: /(\n\n\t+|\n\n|\n\t+|(?<=\n\t+.*)\n(?!\n|\t)|(?<=\n\n)\n|^\n|\n$)/g,
    TITLE: /(^|.*\n)===/,
    // within blocks and triggers
    HEADING_1_MARKUP: /^=1= /,
    HEADING_2_MARKUP: /^=2= /,
    HEADING_3_MARKUP: /^=3= /,
    UNORDERED_LIST_MARKUP: /^\* /,
    ORDERED_LIST_MARKUP: /^\d+. /,
    HORIZONTAL_RULE_MARKUP: /^--- /,
    // hybrid
    IMAGE: /image:.+?{}/,
    // inline
    BOLD_TEXT: /`@\n?.+\n?@`/,
    ITALIC_TEXT: /`\/\n?.+\n?\/`/,
    UNDERLINED_TEXT: /`_\n?.+\n?_`/,
    HIGHLIGHTED_TEXT: /`=\n?.+\n?=`/,
    STRIKETHROUGH_TEXT: /`-\n?.+\n?-`/,
    LINK: /`_\n?.+\n?_\(.+?\)`/,
};
exports.PATTERNS = ENGRAM_REGEX_PATTERNS;
const FIXED_TOKENS = {
    HEADING_1_MARKUP: {
        name: TOKEN_TYPE.HEADING_1_MARKUP,
        value: '=1= ',
    },
    HEADING_2_MARKUP: {
        name: TOKEN_TYPE.HEADING_2_MARKUP,
        value: '=2= ',
    },
    HEADING_3_MARKUP: {
        name: TOKEN_TYPE.HEADING_3_MARKUP,
        value: '=3= ',
    },
    UNORDERED_LIST_MARKUP: {
        name: TOKEN_TYPE.UNORDERED_LIST_MARKUP,
        value: '* ',
    },
    HORIZONTAL_RULE_MARKUP: {
        name: TOKEN_TYPE.HORIZONTAL_RULE_MARKUP,
        value: '--- ',
    },
    IMAGE_MARKUP_1: {
        name: TOKEN_TYPE.IMAGE_MARKUP_1,
        value: 'image:',
    },
    IMAGE_MARKUP_2: {
        name: TOKEN_TYPE.IMAGE_MARKUP_2,
        value: '{}',
    },
    LEFT_BOLD_TEXT_MARKUP: {
        name: TOKEN_TYPE.LEFT_BOLD_TEXT_MARKUP,
        value: '`@',
    },
    RIGHT_BOLD_TEXT_MARKUP: {
        name: TOKEN_TYPE.RIGHT_BOLD_TEXT_MARKUP,
        value: '@`',
    },
    LEFT_ITALIC_TEXT_MARKUP: {
        name: TOKEN_TYPE.LEFT_ITALIC_TEXT_MARKUP,
        value: '`/',
    },
    RIGHT_ITALIC_TEXT_MARKUP: {
        name: TOKEN_TYPE.RIGHT_ITALIC_TEXT_MARKUP,
        value: '/`',
    },
    LEFT_UNDERLINED_TEXT_MARKUP: {
        name: TOKEN_TYPE.LEFT_UNDERLINED_TEXT_MARKUP,
        value: '`_',
    },
    RIGHT_UNDERLINED_TEXT_MARKUP: {
        name: TOKEN_TYPE.RIGHT_UNDERLINED_TEXT_MARKUP,
        value: '_`',
    },
    LEFT_HIGHLIGHTED_TEXT_MARKUP: {
        name: TOKEN_TYPE.LEFT_HIGHLIGHTED_TEXT_MARKUP,
        value: '`=',
    },
    RIGHT_HIGHLIGHTED_TEXT_MARKUP: {
        name: TOKEN_TYPE.RIGHT_HIGHLIGHTED_TEXT_MARKUP,
        value: '=`',
    },
    LEFT_STRIKETHROUGH_TEXT_MARKUP: {
        name: TOKEN_TYPE.LEFT_STRIKETHROUGH_TEXT_MARKUP,
        value: '`-',
    },
    RIGHT_STRIKETHROUGH_TEXT_MARKUP: {
        name: TOKEN_TYPE.RIGHT_STRIKETHROUGH_TEXT_MARKUP,
        value: '-`',
    },
    LINK_MARKUP_1: {
        name: TOKEN_TYPE.LINK_MARKUP_1,
        value: '`_',
    },
    LINK_MARKUP_2: {
        name: TOKEN_TYPE.LINK_MARKUP_2,
        value: '_(',
    },
    LINK_MARKUP_3: {
        name: TOKEN_TYPE.LINK_MARKUP_3,
        value: ')`',
    },
    BLANK_LINE: {
        name: TOKEN_TYPE.BLANK_LINE,
        value: '',
    },
};
exports.TOKENS = FIXED_TOKENS;
